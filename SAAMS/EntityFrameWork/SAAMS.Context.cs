//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAAMS.EntityFrameWork
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SecurityDBEntities : DbContext
    {
        public SecurityDBEntities()
            : base("name=SecurityDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<logindetails_get_Result> logindetails_get(string userName, string pwd)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<logindetails_get_Result>("logindetails_get", userNameParameter, pwdParameter);
        }
    
        public virtual ObjectResult<DDClients_get_Result> DDClients_get(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDClients_get_Result>("DDClients_get", clientIdParameter);
        }
    
        public virtual ObjectResult<DDCustomers_get_Result> DDCustomers_get(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDCustomers_get_Result>("DDCustomers_get", clientIdParameter);
        }
    
        public virtual ObjectResult<DDBranch_get_Result> DDBranch_get(Nullable<int> custId)
        {
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDBranch_get_Result>("DDBranch_get", custIdParameter);
        }
    
        public virtual ObjectResult<DDClusters_get_Result> DDClusters_get(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDClusters_get_Result>("DDClusters_get", branchIdParameter);
        }
    
        public virtual ObjectResult<DDSites_get_Result> DDSites_get(Nullable<int> clusterId)
        {
            var clusterIdParameter = clusterId.HasValue ?
                new ObjectParameter("ClusterId", clusterId) :
                new ObjectParameter("ClusterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDSites_get_Result>("DDSites_get", clusterIdParameter);
        }
    
        public virtual ObjectResult<ClientMList_get_Result> ClientMList_get(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientMList_get_Result>("ClientMList_get", clientIdParameter);
        }
    
        public virtual ObjectResult<string> ClientMInsert_update_get(Nullable<int> hdnVal, Nullable<int> clientId, string cname, string clientPhoneNo, string clientAddress, string authorisedPersonName, string authorisedContactNumber, string authorisedPersonMailId, Nullable<int> userId)
        {
            var hdnValParameter = hdnVal.HasValue ?
                new ObjectParameter("HdnVal", hdnVal) :
                new ObjectParameter("HdnVal", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("Cname", cname) :
                new ObjectParameter("Cname", typeof(string));
    
            var clientPhoneNoParameter = clientPhoneNo != null ?
                new ObjectParameter("ClientPhoneNo", clientPhoneNo) :
                new ObjectParameter("ClientPhoneNo", typeof(string));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var authorisedPersonNameParameter = authorisedPersonName != null ?
                new ObjectParameter("AuthorisedPersonName", authorisedPersonName) :
                new ObjectParameter("AuthorisedPersonName", typeof(string));
    
            var authorisedContactNumberParameter = authorisedContactNumber != null ?
                new ObjectParameter("AuthorisedContactNumber", authorisedContactNumber) :
                new ObjectParameter("AuthorisedContactNumber", typeof(string));
    
            var authorisedPersonMailIdParameter = authorisedPersonMailId != null ?
                new ObjectParameter("AuthorisedPersonMailId", authorisedPersonMailId) :
                new ObjectParameter("AuthorisedPersonMailId", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ClientMInsert_update_get", hdnValParameter, clientIdParameter, cnameParameter, clientPhoneNoParameter, clientAddressParameter, authorisedPersonNameParameter, authorisedContactNumberParameter, authorisedPersonMailIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> ClientMDelete_get(Nullable<int> clientId, Nullable<int> userId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ClientMDelete_get", clientIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<CustomerMList_get_Result> CustomerMList_get(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerMList_get_Result>("CustomerMList_get", clientIdParameter);
        }
    
        public virtual ObjectResult<string> CustomerMInsert_Update_set(Nullable<int> hdnVal, Nullable<int> custId, Nullable<int> clientId, string custName, string custMobile, string custEmail, string custAddress, Nullable<int> userId)
        {
            var hdnValParameter = hdnVal.HasValue ?
                new ObjectParameter("HdnVal", hdnVal) :
                new ObjectParameter("HdnVal", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var custMobileParameter = custMobile != null ?
                new ObjectParameter("CustMobile", custMobile) :
                new ObjectParameter("CustMobile", typeof(string));
    
            var custEmailParameter = custEmail != null ?
                new ObjectParameter("CustEmail", custEmail) :
                new ObjectParameter("CustEmail", typeof(string));
    
            var custAddressParameter = custAddress != null ?
                new ObjectParameter("CustAddress", custAddress) :
                new ObjectParameter("CustAddress", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CustomerMInsert_Update_set", hdnValParameter, custIdParameter, clientIdParameter, custNameParameter, custMobileParameter, custEmailParameter, custAddressParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> CustomerMDelete_get(Nullable<int> custId, Nullable<int> userId)
        {
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CustomerMDelete_get", custIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<BranchMList_get_Result> BranchMList_get(Nullable<int> profileId, Nullable<int> userId)
        {
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BranchMList_get_Result>("BranchMList_get", profileIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> BranchMInsert_Update_set(Nullable<int> insert_Update, Nullable<int> branchId, Nullable<int> custId, string branchName, string address, string branchContactPerson, string contactPersonMobile, string contactPersonEmail, Nullable<int> userId)
        {
            var insert_UpdateParameter = insert_Update.HasValue ?
                new ObjectParameter("Insert_Update", insert_Update) :
                new ObjectParameter("Insert_Update", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var branchContactPersonParameter = branchContactPerson != null ?
                new ObjectParameter("BranchContactPerson", branchContactPerson) :
                new ObjectParameter("BranchContactPerson", typeof(string));
    
            var contactPersonMobileParameter = contactPersonMobile != null ?
                new ObjectParameter("ContactPersonMobile", contactPersonMobile) :
                new ObjectParameter("ContactPersonMobile", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BranchMInsert_Update_set", insert_UpdateParameter, branchIdParameter, custIdParameter, branchNameParameter, addressParameter, branchContactPersonParameter, contactPersonMobileParameter, contactPersonEmailParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> BranchMDelete_get(Nullable<int> branchId, Nullable<int> userId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BranchMDelete_get", branchIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SiteMList_get_Result> SiteMList_get(Nullable<int> profileId, Nullable<int> userId)
        {
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SiteMList_get_Result>("SiteMList_get", profileIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> SiteMInsert_Update_set(Nullable<int> hdnVal, Nullable<int> siteId, Nullable<int> clusterId, string siteName, string address, string siteContactPerson, string contactPersonMobile, string contactPersonEmail, Nullable<int> userId)
        {
            var hdnValParameter = hdnVal.HasValue ?
                new ObjectParameter("HdnVal", hdnVal) :
                new ObjectParameter("HdnVal", typeof(int));
    
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            var clusterIdParameter = clusterId.HasValue ?
                new ObjectParameter("ClusterId", clusterId) :
                new ObjectParameter("ClusterId", typeof(int));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var siteContactPersonParameter = siteContactPerson != null ?
                new ObjectParameter("SiteContactPerson", siteContactPerson) :
                new ObjectParameter("SiteContactPerson", typeof(string));
    
            var contactPersonMobileParameter = contactPersonMobile != null ?
                new ObjectParameter("ContactPersonMobile", contactPersonMobile) :
                new ObjectParameter("ContactPersonMobile", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SiteMInsert_Update_set", hdnValParameter, siteIdParameter, clusterIdParameter, siteNameParameter, addressParameter, siteContactPersonParameter, contactPersonMobileParameter, contactPersonEmailParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> SiteMDelete_get(Nullable<int> siteId, Nullable<int> userId)
        {
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SiteMDelete_get", siteIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<EmployeeList_get_Result> EmployeeList_get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeList_get_Result>("EmployeeList_get");
        }
    
        public virtual ObjectResult<EmployeeMEdit_get_Result> EmployeeMEdit_get(string employeId)
        {
            var employeIdParameter = employeId != null ?
                new ObjectParameter("EmployeId", employeId) :
                new ObjectParameter("EmployeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeMEdit_get_Result>("EmployeeMEdit_get", employeIdParameter);
        }
    
        public virtual ObjectResult<string> EmployeeMDelete_get(Nullable<int> emplcode, Nullable<int> userId)
        {
            var emplcodeParameter = emplcode.HasValue ?
                new ObjectParameter("emplcode", emplcode) :
                new ObjectParameter("emplcode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EmployeeMDelete_get", emplcodeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<DeviceMList_get_Result> DeviceMList_get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeviceMList_get_Result>("DeviceMList_get");
        }
    
        public virtual ObjectResult<DeviceMEdit_get_Result> DeviceMEdit_get(Nullable<int> deviceId)
        {
            var deviceIdParameter = deviceId.HasValue ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeviceMEdit_get_Result>("DeviceMEdit_get", deviceIdParameter);
        }
    
        public virtual ObjectResult<string> DeviceMInsert_Update_set(Nullable<int> insert_Update, Nullable<int> deviceId, Nullable<int> clientId, Nullable<int> clusterId, string siteName, string deviceIMEI, string devicePhone, string carrier, string deviceType, string deviceState, string superVisorPassword, string superUserPassword, string emailId, string warrantyStartDate, string warrantyEndDate, string deviceAlertSMS1, string deviceAlertSMS2, string deviceAlertEmail1, string deviceAlertEmail2, string location, Nullable<int> userId)
        {
            var insert_UpdateParameter = insert_Update.HasValue ?
                new ObjectParameter("Insert_Update", insert_Update) :
                new ObjectParameter("Insert_Update", typeof(int));
    
            var deviceIdParameter = deviceId.HasValue ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var clusterIdParameter = clusterId.HasValue ?
                new ObjectParameter("ClusterId", clusterId) :
                new ObjectParameter("ClusterId", typeof(int));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var deviceIMEIParameter = deviceIMEI != null ?
                new ObjectParameter("DeviceIMEI", deviceIMEI) :
                new ObjectParameter("DeviceIMEI", typeof(string));
    
            var devicePhoneParameter = devicePhone != null ?
                new ObjectParameter("DevicePhone", devicePhone) :
                new ObjectParameter("DevicePhone", typeof(string));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("DeviceType", deviceType) :
                new ObjectParameter("DeviceType", typeof(string));
    
            var deviceStateParameter = deviceState != null ?
                new ObjectParameter("DeviceState", deviceState) :
                new ObjectParameter("DeviceState", typeof(string));
    
            var superVisorPasswordParameter = superVisorPassword != null ?
                new ObjectParameter("superVisorPassword", superVisorPassword) :
                new ObjectParameter("superVisorPassword", typeof(string));
    
            var superUserPasswordParameter = superUserPassword != null ?
                new ObjectParameter("SuperUserPassword", superUserPassword) :
                new ObjectParameter("SuperUserPassword", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var warrantyStartDateParameter = warrantyStartDate != null ?
                new ObjectParameter("WarrantyStartDate", warrantyStartDate) :
                new ObjectParameter("WarrantyStartDate", typeof(string));
    
            var warrantyEndDateParameter = warrantyEndDate != null ?
                new ObjectParameter("WarrantyEndDate", warrantyEndDate) :
                new ObjectParameter("WarrantyEndDate", typeof(string));
    
            var deviceAlertSMS1Parameter = deviceAlertSMS1 != null ?
                new ObjectParameter("DeviceAlertSMS1", deviceAlertSMS1) :
                new ObjectParameter("DeviceAlertSMS1", typeof(string));
    
            var deviceAlertSMS2Parameter = deviceAlertSMS2 != null ?
                new ObjectParameter("DeviceAlertSMS2", deviceAlertSMS2) :
                new ObjectParameter("DeviceAlertSMS2", typeof(string));
    
            var deviceAlertEmail1Parameter = deviceAlertEmail1 != null ?
                new ObjectParameter("DeviceAlertEmail1", deviceAlertEmail1) :
                new ObjectParameter("DeviceAlertEmail1", typeof(string));
    
            var deviceAlertEmail2Parameter = deviceAlertEmail2 != null ?
                new ObjectParameter("DeviceAlertEmail2", deviceAlertEmail2) :
                new ObjectParameter("DeviceAlertEmail2", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeviceMInsert_Update_set", insert_UpdateParameter, deviceIdParameter, clientIdParameter, clusterIdParameter, siteNameParameter, deviceIMEIParameter, devicePhoneParameter, carrierParameter, deviceTypeParameter, deviceStateParameter, superVisorPasswordParameter, superUserPasswordParameter, emailIdParameter, warrantyStartDateParameter, warrantyEndDateParameter, deviceAlertSMS1Parameter, deviceAlertSMS2Parameter, deviceAlertEmail1Parameter, deviceAlertEmail2Parameter, locationParameter, userIdParameter);
        }
    
        public virtual ObjectResult<DesignationMList_get_Result> DesignationMList_get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesignationMList_get_Result>("DesignationMList_get");
        }
    
        public virtual ObjectResult<string> DesignationMInsert_update_get(Nullable<int> hdnVal, Nullable<int> designatnId, string designationName, Nullable<int> userId)
        {
            var hdnValParameter = hdnVal.HasValue ?
                new ObjectParameter("HdnVal", hdnVal) :
                new ObjectParameter("HdnVal", typeof(int));
    
            var designatnIdParameter = designatnId.HasValue ?
                new ObjectParameter("DesignatnId", designatnId) :
                new ObjectParameter("DesignatnId", typeof(int));
    
            var designationNameParameter = designationName != null ?
                new ObjectParameter("designationName", designationName) :
                new ObjectParameter("designationName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DesignationMInsert_update_get", hdnValParameter, designatnIdParameter, designationNameParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> DesignationMDelete_get(Nullable<int> designationId, Nullable<int> userId)
        {
            var designationIdParameter = designationId.HasValue ?
                new ObjectParameter("DesignationId", designationId) :
                new ObjectParameter("DesignationId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DesignationMDelete_get", designationIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> ClusterMDelete_get(Nullable<int> clusterId, Nullable<int> userId)
        {
            var clusterIdParameter = clusterId.HasValue ?
                new ObjectParameter("ClusterId", clusterId) :
                new ObjectParameter("ClusterId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ClusterMDelete_get", clusterIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> ClusterMInsert_Update_set(Nullable<int> insert_Update, Nullable<int> branchId, Nullable<int> clusterId, string clusterName, string address, string clusterContactPerson, string contactPersonMobile, string contactPersonEmail, Nullable<int> userId)
        {
            var insert_UpdateParameter = insert_Update.HasValue ?
                new ObjectParameter("Insert_Update", insert_Update) :
                new ObjectParameter("Insert_Update", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var clusterIdParameter = clusterId.HasValue ?
                new ObjectParameter("ClusterId", clusterId) :
                new ObjectParameter("ClusterId", typeof(int));
    
            var clusterNameParameter = clusterName != null ?
                new ObjectParameter("ClusterName", clusterName) :
                new ObjectParameter("ClusterName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var clusterContactPersonParameter = clusterContactPerson != null ?
                new ObjectParameter("ClusterContactPerson", clusterContactPerson) :
                new ObjectParameter("ClusterContactPerson", typeof(string));
    
            var contactPersonMobileParameter = contactPersonMobile != null ?
                new ObjectParameter("ContactPersonMobile", contactPersonMobile) :
                new ObjectParameter("ContactPersonMobile", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ClusterMInsert_Update_set", insert_UpdateParameter, branchIdParameter, clusterIdParameter, clusterNameParameter, addressParameter, clusterContactPersonParameter, contactPersonMobileParameter, contactPersonEmailParameter, userIdParameter);
        }
    
        public virtual ObjectResult<ClusterMList_get_Result> ClusterMList_get(Nullable<int> profileId, Nullable<int> userId)
        {
            var profileIdParameter = profileId.HasValue ?
                new ObjectParameter("ProfileId", profileId) :
                new ObjectParameter("ProfileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClusterMList_get_Result>("ClusterMList_get", profileIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<DDCity_Get_Result> DDCity_Get(Nullable<int> stateId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDCity_Get_Result>("DDCity_Get", stateIdParameter);
        }
    
        public virtual ObjectResult<DDCountry_Get_Result> DDCountry_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDCountry_Get_Result>("DDCountry_Get");
        }
    
        public virtual ObjectResult<DDState_Get_Result> DDState_Get(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DDState_Get_Result>("DDState_Get", countryIdParameter);
        }
    }
}
